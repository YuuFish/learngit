1 你修改了一个代码文件，想让外地工作的同事马上使用，请问需要几个步骤，用哪些命令 （10分）
	3个步骤：（git add -> git commit -> git push）
	示例：
		1：git add test.jsp // 例如在dev分支中进行的修改
		2:git commit -m "add new Test.jsp" // 提交并进行加上提示信息，用于写入日志文件；
		3:git push origin dev // 上传该文件所在的分支,origin为关联的远程库的名字，通过git remote add命令进行建立的
		如果有冲突,比如clone下来后有别的同事再次进行修改该文件更新到远程库情况下发生的冲突：
			则先进行git pull解决了冲突后在本地进行冲突的解决再push到远程库；


2 你已经在本地编写了若干的代码，还没有提交到本地库，这个时候有其他同事通知你他的代码更新了，需要你马上跟新，
	你要怎么做几个步骤，用哪些命令？（15分）
	先进行代码提交到本地库（git add -> git commit）然后再推送自己的代码，这个时候因为远程库比本地库的修改前的状态新，
		这时进行推送的话会出错，使用git pull命令试图合并更改，这个时候如果git pull成功则会在相应发生冲突的文件中看到使用
		<<<<<<<，=======，>>>>>>>的形式标记出不同分支的内容；根据实际进行修改的合并后，则再次使用git add -> git commit命令进行添加
		到本地库后使用git push origin 分支名 再次推送到远程库进行同步；步骤如下：
	1:将代码文件拷贝到本地库的目录下，确保要文件在相应仓库中；
	2：将代码文件通过git add xxx的命令进行添加到本地库的暂存区；在这步之前可以
		通过git checkout -b newBranch 进行新建分支来管理这些代码（可选）；
	3：通过git commit -m "相关日志信息" 命令将暂存区的文件提交到相应的版本库中；
	4：通过git push origin 分支名，看到推送报错后按照提示使用git pull将冲突的内容pull到本地，进行手动解决冲突后
		再次使用git add -> git commit -> git push 命令进行远程库代码的更新同步；
		其中以上的origin是使用git remote add origin 远程库地址 的形式进行建立连接的远程库的名字，是自定义的；
	如果第4步的git push是失败的话，则先使用命令git branch --set-upstream dev origin/dev
		进行定本地dev分支与远程origin/dev分支的链接，然后再git pull;
		
3 除了命令行外，你所学习了的git 图形化工具有哪些？它的优缺点？（10分）
	图形化工有Git GUI,以及一些集成的开发工具（如Intellij IDEA）里面集成的插件也包含git工具；
	优点：进行可视化的操作，便于不太了解命令行方式工作的同步工作；
	缺点：对于多文件的同步会有较累赘重复的工作；

4 每次提交写注释时应该包含哪些内容？为什么要写注释（10分）
	至少要添加做了什么以及目标文件两个信息；
	如 add a.txt // 说明这次所做的是添加了一个名为a.txt的文件到版本库；
	原因：这些注释都是会进入git的日志文件的，通过git log命令可以查看到相关信息，就算更新到远程库；
		同时clone下来后也可以看到这些日志文件，因此可以让大家都知道具体做了什么修改，便于协作，也便于自己的工作的记录；
		


最后修改时间截止到20：00， 把你们github库的路径发给我。
